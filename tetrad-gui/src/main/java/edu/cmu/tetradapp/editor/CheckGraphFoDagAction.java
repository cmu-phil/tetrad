///////////////////////////////////////////////////////////////////////////////
// For information as to what this class does, see the Javadoc, below.       //
//                                                                           //
// Copyright (C) 2025 by Joseph Ramsey, Peter Spirtes, Clark Glymour,        //
// and Richard Scheines.                                                     //
//                                                                           //
// This program is free software: you can redistribute it and/or modify      //
// it under the terms of the GNU General Public License as published by      //
// the Free Software Foundation, either version 3 of the License, or         //
// (at your option) any later version.                                       //
//                                                                           //
// This program is distributed in the hope that it will be useful,           //
// but WITHOUT ANY WARRANTY; without even the implied warranty of            //
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the             //
// GNU General Public License for more details.                              //
//                                                                           //
// You should have received a copy of the GNU General Public License         //
// along with this program.  If not, see <https://www.gnu.org/licenses/>.    //
///////////////////////////////////////////////////////////////////////////////

package edu.cmu.tetradapp.editor;

import edu.cmu.tetrad.graph.Graph;
import edu.cmu.tetradapp.util.GraphUtils;
import edu.cmu.tetradapp.workbench.GraphWorkbench;

import javax.swing.*;
import java.awt.event.ActionEvent;

/**
 * CheckGraphForCpdagAction is an action class that checks if a given graph is a legal CPDAG
 * (Completed Partially Directed Acyclic Graph) and displays a message to indicate the result.
 */
public class CheckGraphFoDagAction extends AbstractAction {

    /**
     * The desktop containing the target session editor.
     */
    private final GraphWorkbench workbench;

    /**
     * Highlights all latent variables in the given display graph.
     *
     * @param workbench the given workbench.
     */
    public CheckGraphFoDagAction(GraphWorkbench workbench) {
        super("Check to see if Graph is a DAG");

        if (workbench == null) {
            throw new NullPointerException("Desktop must not be null.");
        }

        this.workbench = workbench;
    }

    /**
     * This method is used to perform an action when an event is triggered, specifically when the user clicks on a button or menu item associated with it. It checks if a graph is
     *  a legal CPDAG (Completed Partially Directed Acyclic Graph).
     *
     * @param e The ActionEvent object that represents the event generated by the user action.
     */
    public void actionPerformed(ActionEvent e) {
        Graph graph = workbench.getGraph();

        if (graph == null) {
            JOptionPane.showMessageDialog(GraphUtils.getContainingScrollPane(workbench), "No graph to check for DAGness.");
            return;
        }

        if (graph.paths().isLegalDag()) {
            JOptionPane.showMessageDialog(GraphUtils.getContainingScrollPane(workbench), "Graph is a legal DAG.");
        } else {
            JOptionPane.showMessageDialog(GraphUtils.getContainingScrollPane(workbench), "Graph is not a legal DAG.");
        }
    }
}




